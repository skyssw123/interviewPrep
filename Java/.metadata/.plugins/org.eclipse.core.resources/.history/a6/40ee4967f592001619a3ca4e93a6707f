
public class Main {

	public static int search(int a[], int low, int high, int x)
	{
		while(low <= high)
		{
			int mid = (low + high) / 2;
			if(a[mid] == x)
				return mid;
			if(a[mid] > a[low])
			{
				if( x < a[mid])
					high = mid - 1;
				else
					low = mid + 1;
			}
			
			else if(a[mid] < a[low])
			{
				if( x > a[mid])
					low = mid + 1;
				else 
					high = mid - 1;
			}
			
			else
			{
				if(a[high] != a[mid])
					low = mid + 1;
				else
				{
					//
				}
			}
		}
		return -1;
	}
	public static void main(String[] args) {
		//Q. Given a sorted array of n integers that has been rotated an unknown number of times, write code to find an element in the array.
		//   You may assume that the array was originally sorted in increasing order.
		// input: {15,16,19,20,25,1,3,4,5,7,10,14}, Find 5
		// output: 8
		int[] array = {15,16,19,20,25,1,3,4,5,7,10,14};
		System.out.println(search(array, 0, array.length-1, 5));
	}

}
